const stringResolver = obfuscatedStringResolver;
function obfuscatedStringResolver(index, unused) {
	const obfuscatedStringsArray = getStringLiteralsArray();
	return obfuscatedStringResolver = function(innerIndex, unusedInner) {
		innerIndex = innerIndex - 236;
		let result = obfuscatedStringsArray[innerIndex];
		return result;
	}
	,
	obfuscatedStringResolver(index, unused);
}
(function(getStringLiteralsArray, target_value) {
	const resolveObfuscatedString = obfuscatedStringResolver
	  , obfuscatedStringsArray = getStringLiteralsArray();
	while (!![]) {
		try {
			const result = parseInt(resolveObfuscatedString(374)) / 1 * (-parseInt(resolveObfuscatedString(412)) / 2) +
			parseInt(resolveObfuscatedString(306)) / 3 * (-parseInt(resolveObfuscatedString(346)) / 4) +
			-parseInt(resolveObfuscatedString(410)) / 5 +
			parseInt(resolveObfuscatedString(376)) / 6 * (-parseInt(resolveObfuscatedString(274)) / 7) +
			-parseInt(resolveObfuscatedString(245)) / 8 +
			-parseInt(resolveObfuscatedString(272)) / 9 * (-parseInt(resolveObfuscatedString(328)) / 10) +
			parseInt(resolveObfuscatedString(399)) / 11;
			if (result === target_value)
				break;
			else
				obfuscatedStringsArray.push(obfuscatedStringsArray.shift());
		} catch (e) {
			obfuscatedStringsArray.push(obfuscatedStringsArray.shift());
		}
	}
}(getStringLiteralsArray, 923186));
let date = new Date();
const weirdChatMessages = [stringResolver(0x168), stringResolver(0x1ac), stringResolver(0x194), stringResolver(0x191), stringResolver(0x1b8), stringResolver(0x1a6), stringResolver(0x152), 'j\x27entends\x20des\x20bruits\x20bizarres', stringResolver(0x15e), 'ça\x20sent\x20le\x20fake', 'admin\x20où\x20êtes-vous\x20?', stringResolver(0x1ae), stringResolver(0xff), stringResolver(0x16a), stringResolver(0xf0), stringResolver(0x180), 'quelqu\x27un\x20connaît\x20sa\x20ville\x20?', 'son\x20navigateur\x20est\x20tracé', 'ils\x20savent\x20tout\x20sur\x20lui', stringResolver(0x115), stringResolver(0xf7), 'profil\x20utilisateur\x20créé', stringResolver(0x12e), 'localisation\x20GPS\x20active', 'session\x20enregistrée', stringResolver(0x11b), stringResolver(0x16b), 'exploration\x20prévue\x20le\x202\x20septembre']
  , usernames = [stringResolver(0x114), 'darkwatcher', stringResolver(0x16e), stringResolver(0x156), stringResolver(0x195), stringResolver(0x158), stringResolver(0x166), 'deep_lurker', stringResolver(0x13d), stringResolver(0x103), stringResolver(0x19d), stringResolver(0xf9), stringResolver(0x15b), stringResolver(0x1a0), 'signal_lost', 'data_miner', stringResolver(0x150), stringResolver(0x181), stringResolver(0x13f), 'session_logger']
  , subliminalMessages = [stringResolver(0x157), stringResolver(0x179), 'Diffusion\x20instable', stringResolver(0x141), stringResolver(0x10a), stringResolver(0x147), 'Connexion\x20perdue', 'SIGNAL\x20COMPROMIS', stringResolver(0x184), 'FERMETURE\x20FORCÉE\x20DANS\x2000:47', stringResolver(0x169), 'DONNÉES\x20PERSONNELLES\x20COLLECTÉES', stringResolver(0x102), 'SESSION\x20SURVEILLÉE', stringResolver(0xf3), stringResolver(0xed), stringResolver(0x171), stringResolver(0x134)]
  , popSubliminals = [stringResolver(0x157), stringResolver(0x179), stringResolver(0x113), stringResolver(0x141), stringResolver(0x169), stringResolver(0x1b5), stringResolver(0x17f)];
let messageIndex = 0x0
  , viewerCount = 2847
  , dons = 0x0
  , startTime = Date[stringResolver(288)]() // Se traduit en la date courante
  , ipData = null
  , currentViewers = 2847;
function calculateRealisticViewers() {
	const date_courante = new Date()
	  , heure_courante = date_courante.getHours();
	let viewers;
	if (heure_courante >= 0x14 && heure_courante <= 0x17)
		viewers = 0xdac + Math.random() * 0x834;
	else {
		if (heure_courante >= 0x12 && heure_courante <= 0x13)
			viewers = 0x9c4 + Math.random() * 0x5dc;
		else {
			if (heure_courante >= 0xe && heure_courante <= 0x11)
				viewers = 0x5dc + Math.random() * 0x3e8;
			else {
				if (heure_courante >= 0x8 && heure_courante <= 0xd)
					viewers = 0x320 + Math.random() * 0x2bc;
				else
					viewers = 0xa0 + Math.random() * 0x154;
			}
		}
	}
	return Math.floor(viewers);
}
function updateViewers() {
	const resolveObfuscatedString = stringResolver
	  , spectateurs_réaliste = calculateRealisticViewers()
	  , delta_spectateurs = spectateurs_réaliste - currentViewers
	  , variation = Math[resolveObfuscatedString(0x190)](delta_spectateurs * 0.1) + (Math.random() > 0.5 ? 0x1 : -0x1) * Math[resolveObfuscatedString(0x190)](Math[resolveObfuscatedString(0x197)]() * 0x14);
	currentViewers = Math[resolveObfuscatedString(0x145)](0xa0, Math.min(0x15e0, currentViewers + variation)),
	document.getElementById(resolveObfuscatedString(0x10c))[resolveObfuscatedString(0x10d)] = currentViewers;
}
function getActiveFeatures() {
	const date_fournie = new Date(date)
	  , date_countdown_long = new Date(2025, 7, 17) // 17-07-2025
	  , date_chat = new Date(2025, 7, 19) // 19-07-2025
	  , date_image_zebroleow = new Date(2025, 7, 22) // 22-07-2025
	  , date_countdown_final = new Date(2025, 7, 25) // 25-07-2025
	  , date_localisation = new Date(2025, 7, 28) // 28-07-2025
	  , date_coords = new Date(2025, 7, 30) // 30-07-2025
	  , date_crash = new Date(2025, 8, 4); // 04-08-2025
	return {
		'countdown_long': date_fournie >= date_countdown_long && date_fournie < date_countdown_final,
		'weird_chat': date_fournie >= date_chat,
		'hidden_image': date_fournie >= date_image_zebroleow,
		'countdown_final': date_fournie >= date_countdown_final,
		'location': date_fournie >= date_localisation,
		'coordinates': date_fournie >= date_coords,
		'crash': date_fournie >= date_crash
	};
}
function getContentForDate() {
	const resolveObfuscatedString = stringResolver
	  , features = getActiveFeatures();
	if (features[resolveObfuscatedString(0x1b2)])
		return resolveObfuscatedString(0x1b2);
	if (features[resolveObfuscatedString(0x19e)])
		return resolveObfuscatedString(0x19e);exploration
	if (features[resolveObfuscatedString(0xfd)])
		return resolveObfuscatedString(0xfd);
	if (features[resolveObfuscatedString(0x14e)])
		return 'countdown_final';
	if (features[resolveObfuscatedString(0x149)])
		return resolveObfuscatedString(0x149);
	if (features[resolveObfuscatedString(0x13a)])
		return resolveObfuscatedString(0x13a);
	if (features[resolveObfuscatedString(0x17e)])
		return resolveObfuscatedString(0x17e);
	return resolveObfuscatedString(0x109);
}
const overlay = document.getElementById(stringResolver(0x1a4))
  , startBtn = document[stringResolver(0xec)](stringResolver(0x164))
  , video = document[stringResolver(0xee)]('.main-video');
startBtn.addEventListener(stringResolver(0x13e), function() {
	const resolveObfuscatedString = stringResolver;
	overlay[resolveObfuscatedString(0x10f)][resolveObfuscatedString(0x1ab)] = '0',
	overlay[resolveObfuscatedString(0x10f)][resolveObfuscatedString(0xf1)] = 'none',
	setTimeout( () => overlay[resolveObfuscatedString(0x10f)][resolveObfuscatedString(0x131)] = resolveObfuscatedString(0x14b), 0x190),
	video[resolveObfuscatedString(0x100)] = ![],
	video[resolveObfuscatedString(0x1a3)](),
	initializeApp();
});
function getStringLiteralsArray() {
	const stringLiterals = ['void_observer', 'SUJET\x2034\x20:\x20supprimé\x20il\x20y\x20a\x203\x20jours\x20grâce\x20à\x202300\x20donateurs', 'level3_user', 'IP\x20enregistrée\x20:\x20', '8fHenTH', 'access_denied', 'dons', 'flex', 'il\x20y\x20a\x20quelqu\x27un\x20derrière\x20lui', 'Caméra\x20activée.\x20Identification\x20en\x20cours...', 'Échantillon\x20vocal\x20enregistré', 'Recherche\x20de\x20comptes\x20associés\x20en\x20cours', 'not-allowed', 'camera', 'startLiveBtn', 'firstChild', 'ghost_viewer', 'Activité\x20en\x20ligne\x20tracée', 'c\x27est\x20le\x20sujet\x2034\x20?', 'PROFIL\x20UTILISATEUR\x20CRÉÉ', 'coordonnées\x20GPS\x20quelqu\x27un\x20?', 'rendez-vous\x20sur\x20place\x20dans\x203\x20jours', 'screen', '<span\x20class=\x22username\x22>', 'subject_hunter', 'getHours', 'Safari', 'MICRO\x20SOUS\x20SURVEILLANCE', 'wait', 'Firefox', 'Profil\x20social\x20en\x20cours\x20d\x27analyse...', 'remove', '16inoUKk', 'Adresses\x20MAC\x20détectées', '78WDOhQu', 'Accès\x20niveau\x203\x20requis', 'iPhone', 'query', 'then', 'region', 'countdown_long', 'IDENTITÉ\x20RÉVÉLÉE', 'ils\x20ont\x20son\x20adresse\x20IP\x20maintenant', 'geo_locator', 'forEach', 'city', 'TÉMOIN\x20NON\x20AUTORISÉ', 'add', 'Analyse\x20comportementale\x20activée', 'chatMessages', 'donateBtn', '</span></strong>', 'width', 'subliminalPopup', '<strong><span\x20class=\x22username\x22>ALERTE:</span>\x20<span\x20class=\x22message-text\x22>Leak\x20GPS:\x20', 'div', 'toFixed', '76949642kUYOMx', 'floor', 'qui\x20a\x20l\x27accès\x20niveau\x204\x20?', 'Mac', 'Analyse\x20des\x20contacts\x20en\x20cours', '2300\x20dons\x20et\x20le\x20live\x20a\x20été\x20supprimé…', 'red_room_fan', 'Mouvements\x20de\x20souris\x20enregistrés', 'random', 'Localisation\x20détectée:\x20Paris,\x20Île-de-France', 'statusCountdown', '8757315uXGsfY', 'crashScreen', '66612GqPvTr', 'unknown_entity', 'coordinates', 'Connexions\x20réseau\x20analysées', 'corrupted_feed', 'json', 'Périphériques\x20connectés\x20scannés', 'play', 'startOverlay', 'createElement', 'pourquoi\x20il\x20tremble\x20?', 'message', 'resolvedOptions', 'className', 'Système\x20inconnu', 'opacity', 'il\x20manque\x20quelqu\x27un\x20non\x20?', 'Erreur\x20:\x20Accès\x20refusé.\x20Votre\x20tentative\x20a\x20été\x20enregistrée.', 'signal\x20instable\x20depuis\x2020min', 'Fournisseur\x20d\x27accès\x20:\x20', 'Reconnaissance\x20faciale\x20terminée', 'subliminal', 'crash', 'OBSERVATEURS\x20EN\x20DIRECT', 'macOS', 'DONNÉES\x20COLLECTÉES', 'Analyse\x20du\x20navigateur\x20en\x20cours...', 'getUserMedia', 'la\x20dernière\x20fois\x20ça\x20a\x20mal\x20fini', 'Frappes\x20clavier\x20surveillées', 'grab', 'getElementById', 'CAMÉRA\x20COMPROMISE', 'querySelector', 'Historique\x20de\x20navigation\x20scanné', 'suppression\x20dans\x203...\x202...', 'pointerEvents', 'classList', 'IDENTITÉ\x20PARTIELLEMENT\x20RÉVÉLÉE', 'preventDefault', '11148304btpvnx', 'statusText', 'micro\x20en\x20écoute\x20permanente', 'Surveillance\x20permanente\x20activée', 'watcher_23', 'Android', 'https://ipapi.co/json/', 'filter', 'location', 'blur(1px)\x20grayscale(0.2)', 'qui\x20filme\x20ça\x20?', 'muted', 'body', 'LOCALISATION\x20ENREGISTRÉE', 'deleted_user', 'hiddenBtn', 'getTracks', 'microphone', 'crosshair', 'Fuseau\x20horaire\x20:\x20', 'pre_launch', 'Vous\x20n\x27avez\x20pas\x20les\x20autorisations\x20nécessaires', 'userAgent', 'viewerCount', 'textContent', 'mediaDevices', 'style', '40059kWstct', 'language', '662515srzFhG', 'Diffusion\x20instable', 'anon_7734', 'caméra\x20activée\x20sans\x20permission', 'cursor', 'Langue\x20détectée\x20:\x20', 'length', 'Accès\x20micro\x20refusé.\x20Surveillance\x20limitée.', 'Vérification\x20visuelle\x20requise...', 'j\x27y\x20vais\x20demain,\x20je\x20filme\x20tout', 'VOUS\x20ÊTES\x20MAINTENANT\x20L\x27UN\x20DES\x20NÔTRES', 'height', 'help', 'appendChild', 'now', 'stop', 'Pages\x20visitées\x20cette\x20session\x20:\x20', 'Connexion\x20détectée...', 'org', 'catch', 'timeZone', 'chatHeaderText', 'Vous\x20êtes\x20maintenant\x20dans\x20notre\x20base\x20de\x20données', 'Permission\x20micro\x20:\x20', 'Localisation\x20:\x20', 'Localisation\x20en\x20cours...', 'glitch', ':</span>\x20<span\x20class=\x22message-text\x22>', 'données\x20personnelles\x20récupérées', 'children', 'warningPopup', 'display', '1972932kfApAA', 'state', 'HISTORIQUE\x20ANALYSÉ', 'Chrome', 'addEventListener', 'permissions', 'SUJET_34\x20|\x20NIVEAU_3\x20|\x20●\x20EN\x20DIRECT', 'Navigateur\x20identifié\x20:\x20', 'weird_chat', 'Système\x20d\x27exploitation\x20:\x20', 'Visage\x20détecté.\x20Profil\x20mis\x20à\x20jour.', 'shadow_cam', 'click', 'profile_builder', 'Résolution\x20d\x27écran\x20:\x20', 'Suppression\x20imminente', 'Comptes\x20liés\x20détectés', 'T-\x20', 'Windows', 'max', 'Autorisation\x20micro\x20requise\x20pour\x20continuer...', 'Vous\x20êtes\x20observé', '340LNnhnN', 'hidden_image', 'Accès\x20caméra\x20refusé.\x20Identification\x20impossible.', 'none', 'Empreinte\x20numérique\x20générée', 'Votre\x20profil\x20est\x20maintenant\x20complet', 'countdown_final', 'indexOf', 'ip_tracker', 'innerHTML', 'c\x27est\x20en\x20direct\x20ou\x20pas\x20?', 'Linux', 'Micro\x20activé.\x20Surveillance\x20audio\x20en\x20cours...', 'Données\x20transmises\x20aux\x20serveurs'];
	getStringLiteralsArray = function() {
		return stringLiterals;
	}
	;
	return getStringLiteralsArray();
}
function addChatMessage() {
	const resolveObfuscatedString = stringResolver
	  , _0x1bbbee = getActiveFeatures();
	if (_0x1bbbee[resolveObfuscatedString(0x1b2)])
		return;
	if (!_0x1bbbee[resolveObfuscatedString(0x13a)])
		return;
	const _0x4100a5 = document[resolveObfuscatedString(0xec)]('chatMessages')
	  , _0x4e08f5 = document[resolveObfuscatedString(0x1a5)](resolveObfuscatedString(0x18d));
	_0x4e08f5[resolveObfuscatedString(0x1a9)] = resolveObfuscatedString(0x1a7);
	const _0x13b40c = usernames[Math[resolveObfuscatedString(0x190)](Math[resolveObfuscatedString(0x197)]() * usernames[resolveObfuscatedString(0x118)])]
	  , _0x1e987b = weirdChatMessages[Math[resolveObfuscatedString(0x190)](Math[resolveObfuscatedString(0x197)]() * weirdChatMessages[resolveObfuscatedString(0x118)])];
	_0x4e08f5[resolveObfuscatedString(0x151)] = resolveObfuscatedString(0x16d) + _0x13b40c + resolveObfuscatedString(0x12d) + _0x1e987b + '</span>',
	_0x4100a5.appendChild(_0x4e08f5);
	while (_0x4100a5[resolveObfuscatedString(0x12f)][resolveObfuscatedString(0x118)] > 0xf) {
		_0x4100a5.removeChild(_0x4100a5[resolveObfuscatedString(0x165)]);
	}
}

let countdownInterval = null;
function showCountdown(_0x233d20=!![]) {
	const resolveObfuscatedString = stringResolver
	  , _0xb4fb2a = document[resolveObfuscatedString(0xec)](resolveObfuscatedString(0x199));
	let _0x57d34e;
	_0x233d20 ? _0x57d34e = new Date(2025,10,15) : _0x57d34e = new Date(2025,8,6,0xd,0x0,0x0);
	function _0x25d2dc(_0x2679d5, _0x3dd2b5, _0x10890c, _0x43f436) {
		const _0x2b2f1d = resolveObfuscatedString;
		return _0x2b2f1d(0x143) + _0x2679d5 + 'j\x20' + _0x3dd2b5 + 'h\x20' + _0x10890c + 'm\x20' + _0x43f436 + 's';
	}
	function _0x4c3672() {
		const _0x31d7c4 = resolveObfuscatedString
		  , date_courante = new Date()
		  , _0x236476 = _0x57d34e - date_courante;
		if (!_0xb4fb2a)
			return;
		if (_0x236476 > 0x0) {
			const _0x4ed689 = Math[_0x31d7c4(0x190)](_0x236476 / (0x3e8 * 0x3c * 0x3c * 0x18))
			  , _0x545ca9 = Math[_0x31d7c4(0x190)](_0x236476 % (0x3e8 * 0x3c * 0x3c * 0x18) / (0x3e8 * 0x3c * 0x3c))
			  , _0x1e0834 = Math[_0x31d7c4(0x190)](_0x236476 % (0x3e8 * 0x3c * 0x3c) / (0x3e8 * 0x3c))
			  , _0x28cc78 = Math[_0x31d7c4(0x190)](_0x236476 % (0x3e8 * 0x3c) / 0x3e8);
			_0xb4fb2a['textContent'] = _0x25d2dc(_0x4ed689, _0x545ca9, _0x1e0834, _0x28cc78);
		} else
			_0xb4fb2a[_0x31d7c4(0x10d)] = 'T-\x2000:00:00';
	}
	if (countdownInterval)
		clearInterval(countdownInterval);
	_0x4c3672(),
	countdownInterval = setInterval(_0x4c3672, 0x3e8);
}

function showHiddenButton() {
	const resolveObfuscatedString = stringResolver
	  , _0x3fdf59 = document[resolveObfuscatedString(0xec)](resolveObfuscatedString(0x104))
	  , _0x4098d4 = document.getElementById('hiddenImageModal');
	_0x3fdf59[resolveObfuscatedString(0x10f)][resolveObfuscatedString(0x131)] = 'block',
	_0x3fdf59[resolveObfuscatedString(0x136)](resolveObfuscatedString(0x13e), function() {
		const _0x38e828 = resolveObfuscatedString;
		_0x4098d4['style']['display'] = _0x38e828(0x15d);
	}),
	_0x4098d4[resolveObfuscatedString(0x136)](resolveObfuscatedString(0x13e), function() {
		const _0x287e0d = resolveObfuscatedString;
		_0x4098d4[_0x287e0d(0x10f)][_0x287e0d(0x131)] = _0x287e0d(0x14b);
	}),
	_0x3fdf59['__wired'] = !![];
}
function showCrashScreen() {
	const resolveObfuscatedString = stringResolver
	  , _0x31cccd = document.getElementById(resolveObfuscatedString(0x19b));
	_0x31cccd[resolveObfuscatedString(0x10f)][resolveObfuscatedString(0x131)] = 'flex';
}
function updateStatusBar() {
	const resolveObfuscatedString = stringResolver
	  , _0x321474 = getContentForDate()
	  , _0x36a7bf = document[resolveObfuscatedString(0xec)](resolveObfuscatedString(0xf6))
	  , _0x336603 = document.getElementById(resolveObfuscatedString(0x127));
	_0x321474 !== resolveObfuscatedString(0x1b2) && (_0x36a7bf['textContent'] = resolveObfuscatedString(0x138),
	_0x336603[resolveObfuscatedString(0x10d)] = resolveObfuscatedString(0x1b3));
}
function showSubliminal() {
	const resolveObfuscatedString = stringResolver
	  , _0x3faf05 = document[resolveObfuscatedString(0xec)](resolveObfuscatedString(0x1b1))
	  , _0xdacc79 = subliminalMessages[Math[resolveObfuscatedString(0x190)](Math[resolveObfuscatedString(0x197)]() * subliminalMessages[resolveObfuscatedString(0x118)])];
	_0x3faf05['textContent'] = _0xdacc79,
	_0x3faf05[resolveObfuscatedString(0x10f)][resolveObfuscatedString(0x1ab)] = '1',
	setTimeout( () => {
		const _0x28cebb = resolveObfuscatedString;
		_0x3faf05[_0x28cebb(0x10f)][_0x28cebb(0x1ab)] = '0';
	}
	, 0x320);
}
function showSubliminalPopup() {
	const resolveObfuscatedString = stringResolver
	  , _0x24abbe = document.getElementById(resolveObfuscatedString(0x18b))
	  , _0x50a32a = popSubliminals[Math['floor'](Math[resolveObfuscatedString(0x197)]() * popSubliminals[resolveObfuscatedString(0x118)])];
	_0x24abbe[resolveObfuscatedString(0x10d)] = _0x50a32a,
	_0x24abbe[resolveObfuscatedString(0xf2)][resolveObfuscatedString(0x185)](resolveObfuscatedString(0x12c)),
	_0x24abbe['style'][resolveObfuscatedString(0x1ab)] = '1',
	_0x24abbe[resolveObfuscatedString(0x10f)][resolveObfuscatedString(0xfc)] = resolveObfuscatedString(0xfe);
	const _0x212637 = 0x12c + Math[resolveObfuscatedString(0x197)]() * 0x258;
	setTimeout( () => {
		const _0x47d207 = resolveObfuscatedString;
		_0x24abbe[_0x47d207(0x10f)][_0x47d207(0x1ab)] = '0',
		_0x24abbe[_0x47d207(0xf2)][_0x47d207(0x175)](_0x47d207(0x12c));
	}
	, _0x212637);
}
function showLongSubliminalPopup(_0x158677) {
	const resolveObfuscatedString = stringResolver
	  , _0x1400a6 = document[resolveObfuscatedString(0xec)](resolveObfuscatedString(0x18b));
	_0x1400a6[resolveObfuscatedString(0x10d)] = _0x158677,
	_0x1400a6[resolveObfuscatedString(0xf2)]['add'](resolveObfuscatedString(0x12c)),
	_0x1400a6[resolveObfuscatedString(0x10f)][resolveObfuscatedString(0x1ab)] = '1',
	_0x1400a6['style'][resolveObfuscatedString(0xfc)] = resolveObfuscatedString(0xfe);
	const _0xba14d = 0x5dc;
	setTimeout( () => {
		const _0x2303be = resolveObfuscatedString;
		_0x1400a6['style'][_0x2303be(0x1ab)] = '0',
		_0x1400a6[_0x2303be(0xf2)][_0x2303be(0x175)](_0x2303be(0x12c));
	}
	, _0xba14d);
}
function showWarningPopup(_0x5579dc) {
	const resolveObfuscatedString = stringResolver
	  , _0x2b700f = document[resolveObfuscatedString(0xec)](resolveObfuscatedString(0x130));
	_0x2b700f[resolveObfuscatedString(0x10d)] = _0x5579dc,
	_0x2b700f[resolveObfuscatedString(0x10f)][resolveObfuscatedString(0x1ab)] = '1',
	setTimeout( () => {
		const _0x1ef665 = resolveObfuscatedString;
		_0x2b700f[_0x1ef665(0x10f)]['opacity'] = '0';
	}
	, 0xbb8);
}
function getElapsedTime() {
	const resolveObfuscatedString = stringResolver;
	return Math[resolveObfuscatedString(0x190)]((Date[resolveObfuscatedString(0x120)]() - startTime) / 0x3e8);
}
function getOS() {
	const resolveObfuscatedString = stringResolver
	  , _0x250069 = navigator[resolveObfuscatedString(0x10b)];
	if (_0x250069[resolveObfuscatedString(0x14f)](resolveObfuscatedString(0x144)) !== -0x1)
		return resolveObfuscatedString(0x144);
	if (_0x250069[resolveObfuscatedString(0x14f)](resolveObfuscatedString(0x192)) !== -0x1)
		return resolveObfuscatedString(0x1b4);
	if (_0x250069[resolveObfuscatedString(0x14f)](resolveObfuscatedString(0x153)) !== -0x1)
		return resolveObfuscatedString(0x153);
	if (_0x250069[resolveObfuscatedString(0x14f)](resolveObfuscatedString(0xfa)) !== -0x1)
		return 'Android';
	if (_0x250069[resolveObfuscatedString(0x14f)](resolveObfuscatedString(0x17a)) !== -0x1)
		return 'iOS';
	return resolveObfuscatedString(0x1aa);
}
function getBrowser() {
	const resolveObfuscatedString = stringResolver
	  , _0x144bf5 = navigator[resolveObfuscatedString(0x10b)];
	if (_0x144bf5['indexOf'](resolveObfuscatedString(0x135)) !== -0x1)
		return 'Chrome';
	if (_0x144bf5['indexOf'](resolveObfuscatedString(0x173)) !== -0x1)
		return 'Firefox';
	if (_0x144bf5[resolveObfuscatedString(0x14f)](resolveObfuscatedString(0x170)) !== -0x1)
		return resolveObfuscatedString(0x170);
	if (_0x144bf5[resolveObfuscatedString(0x14f)]('Edge') !== -0x1)
		return 'Edge';
	return 'Navigateur\x20inconnu';
}
function scheduleEvents() {
	const resolveObfuscatedString = stringResolver;
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x123)), 0x7d0),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x1b6)), 0x1388),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x139) + getBrowser()), 0x1f40),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x13b) + getOS()), 0x2ee0),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x117) + navigator[resolveObfuscatedString(0x111)]), 0x3e80),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x108) + Intl['DateTimeFormat']()[resolveObfuscatedString(0x1a8)]()[resolveObfuscatedString(0x126)]), 0x4e20),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x140) + window[resolveObfuscatedString(0x16c)][resolveObfuscatedString(0x18a)] + 'x' + window['screen'][resolveObfuscatedString(0x11d)]), 0x61a8),
	setTimeout( () => {
		const _0x255798 = resolveObfuscatedString;
		showWarningPopup(_0x255798(0x146)),
		setTimeout( () => {
			const _0x1f6eca = _0x255798;
			navigator[_0x1f6eca(0x10e)][_0x1f6eca(0x1b7)]({
				'audio': !![]
			})[_0x1f6eca(0x17c)](_0x45a74b => {
				const _0x5912b3 = _0x1f6eca;
				showWarningPopup(_0x5912b3(0x154)),
				_0x45a74b['getTracks']()[_0x5912b3(0x182)](_0x35ff62 => _0x35ff62[_0x5912b3(0x121)]()),
				setTimeout( () => showWarningPopup(_0x5912b3(0x160)), 0xbb8);
			}
			)['catch']( () => {
				const _0x52c448 = _0x1f6eca;
				showWarningPopup(_0x52c448(0x119));
			}
			);
		}
		, 0x9c4);
	}
	, 0x15f90),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x122) + history['length']), 0x1d4c0),
	setTimeout( () => showLongSubliminalPopup('Temps\x20passé\x20sur\x20le\x20site\x20:\x20' + getElapsedTime() + 's'), 0x20f58),
	setTimeout( () => showLongSubliminalPopup('Cookies\x20analysés...'), 0x249f0),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0xef)), 0x28488),
	setTimeout( () => {
		const _0xaa0a0b = resolveObfuscatedString;
		navigator[_0xaa0a0b(0x137)][_0xaa0a0b(0x17b)]({
			'name': _0xaa0a0b(0x106)
		})[_0xaa0a0b(0x17c)](_0xf27c9e => showLongSubliminalPopup(_0xaa0a0b(0x129) + _0xf27c9e[_0xaa0a0b(0x133)]));
	}
	, 0x2bf20),
	setTimeout( () => {
		const _0xdcb887 = resolveObfuscatedString;
		navigator['permissions'][_0xdcb887(0x17b)]({
			'name': _0xdcb887(0x163)
		})[_0xdcb887(0x17c)](_0x262498 => showLongSubliminalPopup('Permission\x20caméra\x20:\x20' + _0x262498[_0xdcb887(0x133)]));
	}
	, 0x2f9b8),
	setTimeout( () => showLongSubliminalPopup('Profil\x20utilisateur\x20en\x20cours\x20de\x20création...'), 0x33450),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x14c)), 0x36ee8),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x186)), 0x3a980),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x196)), 0x3e418),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x1b9)), 0x41eb0),
	setTimeout( () => {
		const _0x5aa386 = resolveObfuscatedString;
		showLongSubliminalPopup(_0x5aa386(0x11a)),
		setTimeout( () => {
			const _0x376aba = _0x5aa386;
			navigator['mediaDevices'][_0x376aba(0x1b7)]({
				'video': !![]
			})[_0x376aba(0x17c)](_0x1644b8 => {
				const _0x531ad7 = _0x376aba;
				showLongSubliminalPopup(_0x531ad7(0x15f)),
				_0x1644b8[_0x531ad7(0x105)]()[_0x531ad7(0x182)](_0x1016b7 => _0x1016b7['stop']()),
				setTimeout( () => showLongSubliminalPopup(_0x531ad7(0x13c)), 0xbb8),
				setTimeout( () => showLongSubliminalPopup(_0x531ad7(0x1b0)), 0x1770);
			}
			)[_0x376aba(0x125)]( () => {
				const _0x16cb4c = _0x376aba;
				showLongSubliminalPopup(_0x16cb4c(0x14a)),
				setTimeout( () => showLongSubliminalPopup('Session\x20marquée\x20comme\x20suspecte.'), 0x9c4);
			}
			);
		}
		, 0x9c4);
	}
	, 0x493e0),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x19f)), 0x50910),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x177)), 0x543a8),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x1a2)), 0x57e40),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x174)), 0x5b8d8),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x142)), 0x5f370),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x167)), 0x62e08),
	setTimeout( () => showLongSubliminalPopup('Habitudes\x20de\x20navigation\x20identifiées'), 0x668a0),
	setTimeout( () => showLongSubliminalPopup('Votre\x20identité\x20a\x20été\x20partiellement\x20révélée'), 0x6a338),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x155)), 0x6ddd0),
	setTimeout( () => showLongSubliminalPopup('Session\x20enregistrée\x20de\x20façon\x20permanente'), 0x71868),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x128)), 0x75300),
	setTimeout( () => showLongSubliminalPopup('Tentative\x20de\x20connexion\x20à\x20vos\x20autres\x20appareils...'), 0x78d98),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x161)), 0x7c830),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x193)), 0x802c8),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x14d)), 0x83d60),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0xf8)), 0x877f8),
	setTimeout( () => showLongSubliminalPopup('Vous\x20ne\x20pouvez\x20plus\x20vous\x20déconnecter'), 0x8b290),
	setTimeout( () => showLongSubliminalPopup('Bienvenue\x20dans\x20notre\x20réseau'), 0x8ed28),
	setTimeout( () => showLongSubliminalPopup(resolveObfuscatedString(0x11c)), 0x91438);
}
function showLocation() {
	const resolveObfuscatedString = stringResolver;
	fetch(resolveObfuscatedString(0xfb))[resolveObfuscatedString(0x17c)](_0x42966b => _0x42966b[resolveObfuscatedString(0x1a1)]()).then(_0x1d6492 => {
		const _0x57e6ba = resolveObfuscatedString;
		ipData = _0x1d6492,
		setTimeout( () => showLongSubliminalPopup(_0x57e6ba(0x12b)), 0x7530),
		setTimeout( () => {
			const _0x1a7e91 = _0x57e6ba;
			if (ipData)
				showLongSubliminalPopup(_0x1a7e91(0x159) + ipData['ip']);
		}
		, 0xfde8),
		setTimeout( () => {
			const _0x1e5eba = _0x57e6ba;
			if (ipData)
				showLongSubliminalPopup(_0x1e5eba(0x12a) + ipData[_0x1e5eba(0x183)] + ',\x20' + ipData[_0x1e5eba(0x17d)] + ',\x20' + ipData['country_name']);
		}
		, 0x124f8),
		setTimeout( () => {
			const _0x3621ce = _0x57e6ba;
			if (ipData)
				showLongSubliminalPopup(_0x3621ce(0x1af) + ipData[_0x3621ce(0x124)]);
		}
		, 0x14c08);
	}
	)[resolveObfuscatedString(0x125)]( () => {
		const _0x458797 = resolveObfuscatedString;
		showWarningPopup(_0x458797(0x198));
	}
	);
}
let gpsLeakInterval = null;
function startGpsLeakMessages() {
	const resolveObfuscatedString = stringResolver;
	if (gpsLeakInterval)
		return;
	const features = getActiveFeatures();
	if (!features[resolveObfuscatedString(0x19e)])
		return;
	const _0x286d6f = document[resolveObfuscatedString(0xec)](resolveObfuscatedString(0x187))
	  , _0x35a40a = () => {
		const desobfuscateStrings = resolveObfuscatedString;
		let _0x355454, _0x343de0;
		Math[desobfuscateStrings(0x197)]() < 0.3 ? (_0x355454 = '22',
		_0x343de0 = '30') : (_0x355454 = (48.85 + (Math.random() - 0.5) * 0.02)[desobfuscateStrings(0x18e)](0x5),
		_0x343de0 = (2.35 + (Math[desobfuscateStrings(0x197)]() - 0.5) * 0.02)[desobfuscateStrings(0x18e)](0x5));
		const _0x2140c3 = document[desobfuscateStrings(0x1a5)](desobfuscateStrings(0x18d));
		_0x2140c3[desobfuscateStrings(0x1a9)] = desobfuscateStrings(0x1a7),
		_0x2140c3[desobfuscateStrings(0x151)] = desobfuscateStrings(0x18c) + _0x355454 + ',\x20' + _0x343de0 + desobfuscateStrings(0x189),
		_0x286d6f[desobfuscateStrings(0x11f)](_0x2140c3);
		while (_0x286d6f[desobfuscateStrings(0x12f)][desobfuscateStrings(0x118)] > 0xf) {
			_0x286d6f.removeChild(_0x286d6f[desobfuscateStrings(0x165)]);
		}
	}
	;
	_0x35a40a(),
	gpsLeakInterval = setInterval(_0x35a40a, 0x4e20);
}
function updateStatusBarTexts() {
	const resolveObfuscatedString = stringResolver
	  , _0xd4e90 = document[resolveObfuscatedString(0xec)]('statusText')
	  , _0x6a08a3 = document.getElementById(resolveObfuscatedString(0x127));
	_0xd4e90['textContent'] = resolveObfuscatedString(0x138),
	_0x6a08a3[resolveObfuscatedString(0x10d)] = resolveObfuscatedString(0x1b3);
}
function initializeApp() {
	const resolveObfuscatedString = stringResolver;
	startTime = Date['now'](),
	updateStatusBar(),
	updateStatusBarTexts();
	const _0x3f40ea = document[resolveObfuscatedString(0xec)](resolveObfuscatedString(0x199));
	if (_0x3f40ea)
		_0x3f40ea['textContent'] = '';
	updateViewers(),
	setInterval(updateViewers, 0x1388);
	const _0x2f5702 = getActiveFeatures();
	scheduleEvents();
	_0x2f5702['countdown_long'] && showCountdown(!![]);
	if (_0x2f5702[resolveObfuscatedString(0x13a)]) {
		if (!window['__chatInterval']) {
			for (let _0x19eab9 = 0x0; _0x19eab9 < 0x8; _0x19eab9++)
				setTimeout(addChatMessage, _0x19eab9 * 0x3e8);
			window['__chatInterval'] = setInterval(addChatMessage, Math[resolveObfuscatedString(0x197)]() * 0xfa0 + 0x7d0);
		}
	}
	_0x2f5702[resolveObfuscatedString(0x149)] && showHiddenButton();
	if (_0x2f5702[resolveObfuscatedString(0x14e)]) {
		if (countdownInterval)
			clearInterval(countdownInterval);
		showCountdown(![]);
	}
	_0x2f5702['location'] && showLocation();
	_0x2f5702[resolveObfuscatedString(0x19e)] && startGpsLeakMessages();
	_0x2f5702['crash'] && showCrashScreen();
	setInterval( () => {
		const _0xf76162 = resolveObfuscatedString;
		dons += Math['floor'](Math[_0xf76162(0x197)]() * 0x32) + 0xa,
		document[_0xf76162(0xec)](_0xf76162(0x15c))[_0xf76162(0x10d)] = dons;
	}
	, 0xafc8 + Math[resolveObfuscatedString(0x197)]() * 0x7530);
	const _0x37e89e = [resolveObfuscatedString(0x107), resolveObfuscatedString(0x162), resolveObfuscatedString(0x172), resolveObfuscatedString(0x11e), resolveObfuscatedString(0x1ba)];
	setInterval( () => {
		const _0x35c271 = resolveObfuscatedString;
		document[_0x35c271(0x101)]['style'][_0x35c271(0x116)] = _0x37e89e[Math[_0x35c271(0x190)](Math[_0x35c271(0x197)]() * _0x37e89e[_0x35c271(0x118)])];
	}
	, 0x1f40);
}
document[stringResolver(0xec)](stringResolver(0x188)).addEventListener(stringResolver(0x13e), function(_0x50dbfe) {
	const resolveObfuscatedString = stringResolver;
	_0x50dbfe[resolveObfuscatedString(0xf4)](),
	showWarningPopup(resolveObfuscatedString(0x1ad));
});
